<UserControl x:Class="LittleBigMouse.Control.ScreenFrame.ScreenFrameView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mvvm="clr-namespace:HLab.Mvvm;assembly=HLab.Mvvm.Wpf"
             xmlns:converters="clr-namespace:HLab.Base.Converters;assembly=HLab.Base.Wpf"
             xmlns:converters1="clr-namespace:HLab.Base.Wpf.Converters;assembly=HLab.Base.Wpf"
             xmlns:plugins="clr-namespace:LittleBigMouse.Plugins;assembly=LittleBigMouse.Plugins"
             xmlns:screenFrame="clr-namespace:LittleBigMouse.Control.ScreenFrame"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500"
             HorizontalAlignment="Left"
             VerticalAlignment="Top"
             MinHeight="0"
             MinWidth="0"
             RenderTransformOrigin="0,0"
             Foreground="White"
             x:Name="UserControl"
             d:DataContext="{d:DesignInstance Type=screenFrame:ScreenFrameViewModel, IsDesignTimeCreatable=False}"
             Margin="{Binding Margin}" 
             Width="{Binding Rotated.OutsideWidth}"
             Height="{Binding Rotated.OutsideHeight}"
             ClipToBounds="False"
             >
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Place from windows config" Click="ResetPlace_Click"/>
            <Separator />
            <MenuItem Header="Reset Size" Click="ResetSize_Click"/>
        </ContextMenu>
    </UserControl.ContextMenu>
    

    <UserControl.Resources>
        <LinearGradientBrush x:Key="SelectedBrush" 
                             StartPoint="0, 0.4" 
                             EndPoint="1, 0.6">
            <GradientStop Color="#FF002500" Offset="0"/>
            <GradientStop Color ="#FF526452" Offset="0.5"/>
            <GradientStop Color ="#FF051E05" Offset="0.5"/>
            <GradientStop Color="#FF002500" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="UnselectedBrush" 
                             StartPoint="0, 0.4" 
                             EndPoint="1, 0.6">
            <GradientStop Color="Black" Offset="0"/>
            <GradientStop Color ="#FF626161" Offset="0.5"/>
            <GradientStop Color ="#FF1E1E1E" Offset="0.5"/>
            <GradientStop Color="Black" Offset="1"/>
        </LinearGradientBrush>
        <converters1:ToBrushConverter x:Key="Highlighter" TrueValue="{StaticResource SelectedBrush}" FalseValue="{StaticResource UnselectedBrush}"/>
    </UserControl.Resources>

    <Grid>
        
        <Grid x:Name="GridRotated"
              Background="{Binding Model.Selected, Converter={StaticResource Highlighter}, FallbackValue={StaticResource UnselectedBrush}}" >
            <TextBlock.FontSize>
                <MultiBinding ConverterParameter="0.05" Converter="{StaticResource MultiScale}">
                    <Binding ElementName="GridRotated" Path="ActualHeight"/>
                    <Binding ElementName="GridRotated" Path="ActualWidth"/>
                </MultiBinding>
            </TextBlock.FontSize>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Rotated.LeftBorder,FallbackValue=20}"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="{Binding Rotated.RightBorder,FallbackValue=20}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding Rotated.TopBorder,FallbackValue=20}"/>
                <RowDefinition/>
                <RowDefinition Height="{Binding Rotated.BottomBorder,FallbackValue=20}"/>
            </Grid.RowDefinitions>

            <!-- TopLeft Shadow -->
            <Border Grid.Column="0"  Grid.Row="1" BorderThickness="0,0,1,0" BorderBrush="black"/>
            <Border Grid.Column="1"  Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="black"/>
            <!-- BottomRight Shadow -->
            <Border Grid.Column="0"  Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="3" BorderThickness="0,0,1,1" BorderBrush="black"/>
            <!-- TopLeft Light -->
            <Border Grid.Column="0"  Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="3" BorderThickness="1,1,0,0" BorderBrush="LightSlateGray"/>
            <!-- BottomRight Light -->
            <Border Grid.Column="2"  Grid.Row="1" BorderThickness="1,0,0,0">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Offset="0" Color="LightBlue"/>
                        <GradientStop Offset="1" Color="Gray"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <Border Grid.Column="1"  Grid.Row="2" BorderThickness="0,1,0,0">

                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Offset="0" Color="LightBlue"/>
                        <GradientStop Offset="1" Color="Gray"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>


        </Grid>

            <!-- Grid Containing objects that will be rotated -->
        <Grid   
            IsHitTestVisible="False"
            RenderTransform="{Binding Rotation}">

            <TextBlock.FontSize>
                <MultiBinding ConverterParameter="0.05" Converter="{StaticResource MultiScale}">
                    <Binding ElementName="GridRotated" Path="ActualHeight"/>
                    <Binding ElementName="GridRotated" Path="ActualWidth"/>
                </MultiBinding>
            </TextBlock.FontSize>


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Unrotated.LeftBorder,FallbackValue=20}"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="{Binding Unrotated.RightBorder,FallbackValue=20}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding Unrotated.TopBorder,FallbackValue=20}"/>
                <RowDefinition/>
                <RowDefinition Height="{Binding Unrotated.BottomBorder,FallbackValue=20}"/>
            </Grid.RowDefinitions>
            <Border Name="TopRow"/>
            <Label 
            ClipToBounds="False" 
            Padding="0" 
            Grid.Row="0" 
            Grid.Column="1" 
                FontWeight="Black"
                Opacity="0.75"
            Content="{Binding Path=Model.ScreenModel.PnpDeviceName, FallbackValue=Unknown}">

                <Label.FontSize>
                    <Binding ElementName="TopRow" Path="ActualHeight" Converter="{StaticResource Scale}" ConverterParameter="0.7"
                             FallbackValue="14" />
                </Label.FontSize>
                <Label.Foreground>
                    <LinearGradientBrush>
                        <GradientStop Offset="0" Color="#F0FFFFFF"/>
                        <GradientStop Offset="1" Color="#A0FFFFFF"/>
                    </LinearGradientBrush>
                </Label.Foreground>
            </Label>

            
            
            <Label 
                Padding="{Binding Path=LogoPadding}" 
                Margin="0" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center" 
                Grid.Row="2" 
                Grid.Column="1" 
                Content="{Binding Path=Logo}"
                />

            <!--<Label 
                Margin="0" 
                HorizontalAlignment="Right" 
                VerticalAlignment="Center" 
                Grid.Row="2" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                Content="{Binding PowerButton}"
                />-->
        </Grid>

        <Grid>               

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Rotated.LeftBorder,FallbackValue=20}"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="{Binding Rotated.RightBorder,FallbackValue=20}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding Rotated.TopBorder,FallbackValue=20}"/>
                <RowDefinition/>
                <RowDefinition Height="{Binding Rotated.BottomBorder,FallbackValue=20}"/>
            </Grid.RowDefinitions>

            <TextBlock.FontSize>
                <MultiBinding ConverterParameter="0.05" Converter="{StaticResource MultiScale}">
                    <Binding ElementName="GridRotated" Path="ActualHeight"/>
                    <Binding ElementName="GridRotated" Path="ActualWidth"/>
                </MultiBinding>
            </TextBlock.FontSize>

            <Grid Grid.Column="1" Grid.Row="1" Background="{Binding BackgroundColor}"/>
            
            <ContentControl Grid.Column="1" Grid.Row="1" Content="{Binding WallPaper}"/>
            
            <mvvm:ViewLocator 
                Grid.Column="1" Grid.Row="1" 
                ViewClass="{x:Type plugins:IViewScreenFrameContent}"
                Model="{Binding Model}"
                ViewMode="{Binding Presenter.ViewMode}"
            />

        </Grid>
    </Grid>
</UserControl>
